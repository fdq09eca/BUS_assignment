@startuml BUS-B7-sqDia2
skinparam Style strictuml
skinparam SequenceMessageAlignment center

title
    Sequence Diagram - Risk Rating overlay
end title

hide unlinked
participant "Notification"
participant "Login"
actor "User"
participant "Local View"
participant "AR Engine"
participant "Global View"
participant "Overlay Information"
participant "Risk Rating"
participant "COVID Data Handler"
participant "Map Data Handler"
participant "User Pins Moderation"


activate User
activate Login
alt new user
    User -> Login: Register
    Login --> User: Account Created
end 

User --> Login: Autologin

deactivate Login
activate "Local View"
activate "AR Engine"
User -> "Local View": default view
note over User: Assume User has given the camera permission.
"Local View" -> "Overlay Information": request surrounding overlay information
loop while request device GPSPostion failed
    "Local View" -> "Navigation": request's\n device GPSPostion
    activate "Navigation"
    "Navigation" -> "Navigation": get device's\n current GPS Position 
end
"Navigation" --> "Local View": return device's\n current GPS Position
deactivate "Navigation"


"Local View" -> "Overlay Information": request overlay information
activate "Overlay Information"

== Start requesting overlay information ==
"Overlay Information" -> "Map Data Handler": requestData(GPS Position)
activate "Map Data Handler"
"Map Data Handler" --> "Overlay Information": MapData(GPS Position)
deactivate "Map Data Handler"

"Overlay Information" -> "COVID Data Handler": requestData(GPSpostion)
activate "COVID Data Handler"
"COVID Data Handler" --> "Overlay Information": return CovidData(GPSpostion)
deactivate "COVID Data Handler"

"Overlay Information" -> "User Pins Moderation": request UserPinsFeed(GPS Position)
activate "User Pins Moderation"
"User Pins Moderation" --> "Overlay Information": return ModeratedUserPinsFeed(GPS Position)
deactivate "User Pins Moderation"
== Finish requesting overlay information ==

"Overlay Information" --> "AR Engine": overlay surrounding information Data
deactivate "Overlay Information"
"AR Engine" --> "Local View": generate overlay AR objects
"Local View" --> "User": display overlay information and buttons

"User" -> "Local View": select COVID-19 Risk Rating button
"Local View" -> "Overlay Information": request COVID-19 Risk Rating Data
activate "Overlay Information"
"Overlay Information"  -> "Risk Rating": request COVID-19 Risk Rating Data with current device GPS position
activate "Risk Rating"
loop for each non-residential buildings
    "Risk Rating" --> "Risk Rating": calculateRiskRating(current device GPS position)
    "Risk Rating" --> "Overlay Information": return GeoData with risk rated 
end
deactivate "Risk Rating"
"Overlay Information" --> "AR Engine": return a list of risk rated buildings
deactivate "Overlay Information"
"AR Engine" --> "Local View": load risk rated to the buildings \nthat are within device camera (AR Object)
"Local View" --> "User": ready display surrounding risk rate throught device's camera

"User" -> "Local View": move camera towards target i.e. restaurant 
"Local View" -> "AR Engine": request target risk rate with target GeoData

alt if restaruent risk rate available
    "AR Engine" --> "Local View": overlay target risk rate on the screen
    "Local View" --> "User": display target risk rate as AR retreived value
else
    "AR Engine" --> "Local View": return null
    "Local View" --> "User": display target risk rate as "Unknown"
end alt

@enduml